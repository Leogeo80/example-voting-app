pipeline {
   
   agent{
	docker{
		image 'maven:3.6.1-jdk-8-slim'
		args '-v $HOME/.m2:/root/.m2'
	}
   } 
 
    stages {
        stage('build'){
		steps{
                    echo 'building worker app'
                    dir ('worker'){
                      sh 'mvn compile'
                    }
            }
        }
        stage('test'){
		 steps{
                    echo 'Running Unit Test on worker app'
                    dir('worker'){
                      sh 'mvn clean test'
                    }
                  }
        }
        stage('package'){
		steps{
                    echo 'Packaging worker app into a jar file'
                    dir('worker'){
                      sh 'mvn package -DskipTest'
                      archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                    }
                  }
        }
        stage('docker-package'){
            agent any
		steps{
                    echo 'Packaging worker app with docker'
                    script{
                      docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
			def workerImage = docker.build("leogeo80/worker:v${env.BUILD_ID}", "./worker")
                        workerImage.push()
                        workerImage.push("latest")
                       }
                    }
                  }
        }
    }
   post{
     always{
	 echo 'Pipeline for worker is complete..'
     }
     
   }

}
